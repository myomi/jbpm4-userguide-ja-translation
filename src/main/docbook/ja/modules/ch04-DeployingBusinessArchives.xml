<chapter id="deployingbusinessarchives">
  <title>Deploying business archives</title>
  
  <para>A business archive is a collection of files 
  assembled in a jar formatted file.  The files in 
  a business archive can be jPDL process files, forms,
  process image and other process resources.
  </para>
  
  <section id="deployingprocessfilesandprocessresources">
    <title>Deploying process files and process resources</title>

    <para>Process files and process resources have to be 
    deployed in the process repository which is stored in 
    the database.
    </para>
    
    <para>There is a jBPM ant task to deploy business archives
    (<literal>org.jbpm.pvm.internal.ant.JbpmDeployTask</literal>)
    The <literal>JbpmDeployTask</literal> can deploy individual  
    process files and business archives.  They are deployed  
    directly to the database over a JDBC connection.  So it is a 
    requirement that the database is up and running before you can 
    deploy processes. 
    </para>
    
    <para>An example of creating and deploying a business 
    archive can be found in the ant build script (build.xml) in the examples directory of the 
    distribution.  Let's look at the relevant parts.  First a path is 
    declared that includes the jbpm.jar and all its dependencies.  
    </para>
    
    <programlisting>&lt;path id=&quot;jbpm.libs.incl.dependencies&quot;&gt;
  &lt;pathelement location=&quot;${jbpm.home}/examples/target/classes&quot; /&gt;
  &lt;fileset dir=&quot;${jbpm.home}&quot;&gt;
    &lt;include name=&quot;jbpm.jar&quot; /&gt;
  &lt;/fileset&gt;
  &lt;fileset dir=&quot;${jbpm.home}/lib&quot; /&gt;
&lt;/path&gt;</programlisting>

    <para>The JDBC driver jar(s) for your database should also be included
    in the path.  MySQL, PostgreSQL and HSQLDB are in the distribution.  But
    the oracle driver you have to download separately from the oracle site since 
    we're not allowed to redistribute that file. 
    </para>

    <para>When a business archive is deployed, jBPM scans for all the files 
    with the <literal>.jpdl.xml</literal> extension in the business archive.
    All those files will be parsed as jPDL processes and made available to the
    runtime engine.  All other resources in the business archive will also 
    be stored as resources in that deployment and made accessible through
    <literal>InputStream getResourceAsStream(long deploymentDbid, String resourceName);</literal>
    in class <literal>RepositoryService</literal> 
    </para>
    
    <para>For creating a business archives, the <literal>jar</literal> task
    can be used.
    </para>
    
    <programlisting>&lt;jar destfile=&quot;${jbpm.home}/examples/target/examples.bar&quot;&gt;
      &lt;fileset dir=&quot;${jbpm.home}/examples/src&quot;&gt;
        &lt;include name=&quot;**/*.jpdl.xml&quot; /&gt;
        ...
      &lt;/fileset&gt;
    &lt;/jar&gt;</programlisting>
    
    <para>Before the jbpm-deploy task can be used it need to be declared like this:</para>
    
    <programlisting>&lt;taskdef name=&quot;jbpm-deploy&quot;
           classname=&quot;org.jbpm.pvm.internal.ant.JbpmDeployTask&quot;
         classpathref=&quot;jbpm.libs.incl.dependencies&quot; /&gt;</programlisting>
         
    <para>Then the ant task can be used like this</para>
    
    <programlisting>
  &lt;jbpm-deploy file=&quot;${jbpm.home}/examples/target/examples.bar&quot; /&gt;</programlisting>

    <table><title><literal>jbpm-deploy</literal> attributes:</title>
      <tgroup cols="5" rowsep="1" colsep="1">
        <thead>
          <row>
            <entry>Attribute</entry>
            <entry>Type</entry>
            <entry>Default</entry>
            <entry>Required?</entry>
            <entry>Description</entry>
          </row>
        </thead>
        <tbody>
          <row>
            <entry><literal>file</literal></entry>
            <entry>file</entry>
            <entry></entry>
            <entry>optional</entry>
            <entry>A file to be deployed.  Files ending with <literal>.xml</literal> will be deployed 
            as process files.  Files ending with <literal>ar</literal> like .bar or .jar 
            will be deployed as business archives.
            </entry>
          </row>
          <row>
            <entry><literal>cfg</literal></entry>
            <entry>file</entry>
            <entry>jbpm.cfg.xml</entry>
            <entry>optional</entry>
            <entry>Points to the jbpm configuration file that has to be on the classpath in which 
            the <literal>jbpm-deploy</literal> task was defined.
            </entry>
          </row>
        </tbody>
      </tgroup>
    </table>
    <table><title><literal>jbpm-deploy</literal> elements:</title>
      <tgroup cols="3" rowsep="1" colsep="1">
        <thead>
          <row>
            <entry>Element</entry>
            <entry>Multiplicity</entry>
            <entry>Description</entry>
          </row>
        </thead>
        <tbody>
          <row>
            <entry><literal>fileset</literal></entry>
            <entry>0..*</entry>
            <entry>files to be deployed expressed as a plain ant fileset.
            Files ending with <literal>.xml</literal> will be deployed 
            as process files.  Files ending with <literal>ar</literal> like .bar or .jar 
            will be deployed as business archives.</entry>
          </row>
        </tbody>
      </tgroup>
    </table>
  
  </section>
  
  <section id="deployingclasses">
    <title>Deploying classes</title>
    <para>jBPM 4 does not yet have a process classloading mechanism as in jBPM 3.
    </para>
    <para>All the classes that are referred to 
    in your process files, either directly or indirectly, need to be made available 
    on the classpath of your jBPM installation.
    </para>
    <para>In case of the examples, an examples.jar file is created with 
    all the classes and it is put in the <literal>lib</literal> directory of the JBoss 
    server configuration.</para>
    <para>If you want process classloading so that user defined classes can be deployed 
    in and loaded from the business archive, vote for it in 
    <ulink url="https://jira.jboss.org/jira/browse/JBPM-2200">JIRA issue JBPM-2200</ulink>.
    We'll prioritize this depending on the number of votes and on the use cases that 
    you can add as a comment in which you explain why you need it.
    </para>
  </section>

</chapter>
