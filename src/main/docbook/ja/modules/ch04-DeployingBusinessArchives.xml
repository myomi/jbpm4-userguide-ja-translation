<chapter id="deployingbusinessarchives">
  <title>ビジネスアーカイブをデプロイする</title>
  
  <para>ビジネスアーカイブは、jarファイルの集合です。
  ビジネスアーカイブには、jPDLプロセスファイル、フォームファイル、classファイル、プロセス画像ファイルや、
  その他のプロセスリソースファイルが含まれます。
  </para>
  
  <section id="deployingprocessfilesandprocessresources">
    <title>プロセスファイルやプロセスリソースをデプロイする</title>

    <para>プロセスファイルやプロセスリポジトリを使用するには、データベース上のプロセスリポジトリにデプロイしなければなりません。
    </para>
    
    <para>ビジネスアーカイブをデプロイするためのantタスクが用意されています
    (<literal>org.jbpm.pvm.internal.ant.JbpmDeployTask</literal>)。
    この<literal>JbpmDeployTask</literal>を使えば個々のプロセスファイルや
    ビジネスアーカイブをデプロイすることができます。ビジネスアーカイブやプロセスファイル
    はJDBCコネクションを使用してデータベースにデプロイされます。そのためデプロイには、
    あらかじめデータベースを起動しておく必要があります。
    </para>
    
    <para>ビジネスアーカイブの作成とデプロイの例が、
    jBPMのexamplesディレクトリ直下のantビルドスクリプト (build.xml)にあります。
    関連する箇所を見てみましょう。まず最初に、依存ライブラリの宣言を見てください。
    </para>
    
    <programlisting>&lt;path id=&quot;jbpm.libs.incl.dependencies&quot;&gt;
  &lt;pathelement location=&quot;${jbpm.home}/examples/target/classes&quot; /&gt;
  &lt;fileset dir=&quot;${jbpm.home}&quot;&gt;
    &lt;include name=&quot;jbpm.jar&quot; /&gt;
  &lt;/fileset&gt;
  &lt;fileset dir=&quot;${jbpm.home}/lib&quot; /&gt;
&lt;/path&gt;</programlisting>

    <para>このパスの中にご使用のデータベースのJDBCドライバが含まれているか、確認してください。
    jBPMにはMySQL、PostgreSQL、HSQLDBのドライバが同梱されています。
    Oracleのドライバーは再配布が許可されていないために同梱していません。別途ダウンロードしてください。
    </para>

    <para>ビジネスアーカイブがデプロイされると、jBPMはその中から、
    拡張子が<literal>.jpdl.xml</literal>のすべてのファイルを検索します。
    見つかったすべてのファイルがjPDLプロセスとしてパースされ、ランタイムエンジン上で実行可能になります。
    その他のファイルは、リソースとして保存され、
    <literal>RepositoryService</literal>クラスの<literal>InputStream getResourceAsStream(long deploymentDbid, String resourceName);</literal>
    メソッドを使ってアクセス可能になります。
    </para>
    
    <para>ビジネスアーカイブの作成には、<literal>jar</literal>タスクが使用されています。
    </para>
    
    <programlisting>&lt;jar destfile=&quot;${jbpm.home}/examples/target/examples.bar&quot;&gt;
  &lt;fileset dir=&quot;${jbpm.home}/examples/src&quot;&gt;
    &lt;include name=&quot;**/*.jpdl.xml&quot; /&gt;
    ...
  &lt;/fileset&gt;
&lt;/jar&gt;</programlisting>
    
    <para>jbpm-deployを利用可能にするためには、以下のように宣言しておく必要があります。</para>
    
    <programlisting>&lt;taskdef name=&quot;jbpm-deploy&quot;
    classname=&quot;org.jbpm.pvm.internal.ant.JbpmDeployTask&quot;
    classpathref=&quot;jbpm.libs.incl.dependencies&quot; /&gt;</programlisting>
         
    <para>これで、以下のようにjbpm-deployタスクが利用可能になります。</para>
    
    <programlisting>&lt;jbpm-deploy file=&quot;${jbpm.home}/examples/target/examples.bar&quot; /&gt;</programlisting>

    <table><title><literal>jbpm-deploy</literal>の属性:</title>
      <tgroup cols="5" rowsep="1" colsep="1">
        <thead>
          <row>
            <entry>属性</entry>
            <entry>型</entry>
            <entry>デフォルト値</entry>
            <entry>必須？</entry>
            <entry>説明</entry>
          </row>
        </thead>
        <tbody>
          <row>
            <entry><literal>file</literal></entry>
            <entry>file</entry>
            <entry></entry>
            <entry>任意</entry>
            <entry>ファイル名が<literal>.xml</literal>で終わるファイルはプロセスファイルとしてデプロイされます。
            ファイル名が.barや.jarのような、<literal>ar</literal>で終わるファイルの場合は、ビジネスアーカイブとしてデプロイされます。
            </entry>
          </row>
          <row>
            <entry><literal>cfg</literal></entry>
            <entry>file</entry>
            <entry>jbpm.cfg.xml</entry>
            <entry>任意</entry>
            <entry>
            <literal>jbpm-deploy</literal>タスクのクラスパス上にあるべき、jbpm設定ファイルを指定します。
            </entry>
          </row>
        </tbody>
      </tgroup>
    </table>
    <table><title><literal>jbpm-deploy</literal>の子要素:</title>
      <tgroup cols="3" rowsep="1" colsep="1">
        <thead>
          <row>
            <entry>要素名</entry>
            <entry>多重度</entry>
            <entry>説明</entry>
          </row>
        </thead>
        <tbody>
          <row>
            <entry><literal>fileset</literal></entry>
            <entry>0..*</entry>
            <entry>デプロイするファイルをantのfilesetで指定します。
            ファイル名が<literal>.xml</literal>で終わるファイルはプロセスファイルとしてデプロイされます。
            ファイル名が.barや.jarのような、<literal>ar</literal>で終わるファイルの場合は、ビジネスアーカイブとしてデプロイされます。
            </entry>
          </row>
        </tbody>
      </tgroup>
    </table>
  
  </section>
  
  <section id="deployingclasses">
    <title>クラスファイルをデプロイする</title>
    <para>jBPMのバージョン4.2から、バージョン3と同様のクラスローディングが追加されました。
    </para>
    <para>クラスをプロセスから利用可能にするには、以下の３種類の方法の中から１つを選ばなければなりません。
    </para>
    <itemizedlist>
      <listitem>.classファイルをビジネスアーカイブにする方法。jBPM 3とは異なり、
      アーカイブファイルのルートが、クラスを検索する際のルートとなります。
      したがって、<literal>com.superdeluxsandwiches.Order</literal>というクラスが
      プロセスファイル内で参照された場合、プロセスエンジンは
      <literal>com/superdeluxsandwiches/Order.class</literal>という名称で登録された
      ビジネスアーカイブを検索します。
      一度ロードされたクラスはキャッシュされますので (キャッシュのキーはデプロイとコンテキストクラスローダの組み合わせです）、 
      jBPM 3よりもパフォーマンスの向上が望めます。
      </listitem>
      <listitem>jBPMを利用するwebアプリケーションに含まれるクラスを使用する方法。Even when 
      jBPMがjbossやtomcatなどのサーバー再度にデプロイされた場合、jBPMを利用するwebアプリケーションやエンタープライズアプリケーション
      に含まれるクラスが検索対象になります。これは、プロセスの実行中にはjBPMは現在のコンテキストクラスローダを使用してクラスを検索するためです。
      </listitem>
      <listitem>tomcatやjbossのlibディレクトリ内のjarファイルのように、サーバで利用可能な場所にclassファイルを設置する方法。
      </listitem>
    </itemizedlist>
    <para>jBPMに同梱されているexamplesの場合、すべてのクラスファイルを含んだexamples.jarファイルを作成して、JBossの<literal>lib</literal>ディレクトリに設置しています。
    詳しくは、jBPMのinstallディレクトリ直下にあるbuild.xmlの<literal>install.examples.into.tomcat</literal>ターゲットと
    <literal>install.examples.into.jboss</literal>ターゲットを参照してください。今後のリリースでビジネスアーカイブ内のクラスも検索対象に含めるように
    機能を変更するかもしれません。
    </para>
  </section>

</chapter>
